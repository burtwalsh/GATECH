
Question 2.1

A good weekend could be predicted for my family with the following predictors:

My kids get appropriate sleep
My kids do not eat too much sugar
We have money to do an activity
We do not have an overwhelming amount of chores to do
The weather is nice if we do not have money for an activity indoors

(we would have to come up with numeric values for the predictors)

Question 2.2 

Part I

CODE

data=read.csv("file:///Users/burtwalsh/GATECH/credit_card_data-headers.txt", sep='\t',header=TRUE)

library('kernlab')
library('kknn')
library('purrr')

ksvm_func=function(c1) {
   model <- ksvm(as.matrix(data[,1:10]),as.factor(data[,11]),type="C-svc",kernel="vanilladot",C=c1, scaled=TRUE)
  p <- colSums(model@xmatrix[[1]] * model@coef[[1]])
  wrong=0
  for (i in 1:nrow(data)) { 
    q=(sum(p*data[i,1:10]) - model@b > 0)
    if (q) { if (data[i,11] != 1) wrong = wrong + 1 } 
    else { if (data[i,11] != 0) wrong = wrong + 1 } 
  }
  print((nrow(data)-wrong)/nrow(data))
}

TESTS

Test with various C values and the associated error.  As C goes up and we allow for more slack the error rate goes up at 1000; it is pretty constant before then.

ksvm_func(1)
Error 0.6299694

ksvm_func(2)
Error 0.6299694

ksvm_func(20)
Error 0.6314985

ksvm_func(100)
Error 0.6314985

ksvm_func(1000)
Error 0.4525994


PART II

data=read.csv("file:///Users/burtwalsh/GATECH/credit_card_data-headers.txt", sep='\t',header=TRUE)

library('kernlab')
library('kknn')
library('purrr')

ksvm_func_rb=function(c1) {
   model <- ksvm(as.matrix(data[,1:10]),as.factor(data[,11]),type="C-svc",kernel="rbfdot",C=c1, scaled=TRUE)
  p <- colSums(model@xmatrix[[1]] * model@coef[[1]])
  wrong=0
  for (i in 1:nrow(data)) { 
    q=(sum(p*data[i,1:10]) - model@b > 0)
    if (q) { if (data[i,11] != 1) wrong = wrong + 1 } 
    else { if (data[i,11] != 0) wrong = wrong + 1 } 
  }
  print((nrow(data)-wrong)/nrow(data))
}

TEST

The Radial Basis Kernel performs better at a high level of slack but the overall error at lower rates is similar to vanilladot

ksvm_func_rb(1)
Error 0.6299694

ksvm_func_rb(2)
Error 0.675841 

ksvm_func_rb(20)
Error 0.675841 

ksvm_func_rb(100)
Error 0.6743119

ksvm_func_rb(1000)
Error 0.6697248 


PART III

data=read.csv("file:///Users/burtwalsh/GATECH/credit_card_data-headers.txt", sep='\t',header=TRUE)

library('kernlab')
library('kknn')
library('purrr')

val=sample(1:nrow(h), 400, replace=FALSE)
kknn_func=function(kx) {
   hh=kknn(R1 ~ ., data[val,], data[-val,], k=kx, scale=TRUE)
   fit=fitted(hh)
   q=unlist(map(fit, function(x) { if (x >= 0.5) 1 else 0 }))
   a=table(data[-val,]$R1, q)
   print(  (length(q)-(a[[1,2]]+a[[2,1]]))/length(q))
}

TEST

kknn_func(1)
0.7637795
kknn_func(2)
0.7637795
kknn_func(10)
0.8031496
kknn_func(50)
0.8267717
kknn_func(100)
0.8425197
kknn_func(300)
0.8188976

k equal to 50 seems reasonable with an accuracy around 0.8425197 for the specific drawn sample 

